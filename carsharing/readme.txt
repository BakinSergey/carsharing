
1.  Что хотел реализовать:

    4 роли:

    1. хозяин - сдает свои авто в аренду

    2. арендатор - соотв. арендует одну или несколько машин

    3. оператор - создает техническую базу(бренды, марки, модели машин, года выпуска, тех параметры),
    т.е. ту базовую часть информации по каждой машине, которую Хозяину не нужно заполнять руками при добавлении машины,
    но фильтры поиска(для арендатора) будут включать как базовую информацию(объем двигателя, тип коробки передач, ГУР/ЭУР и др)
    вторую часть информации по авто задает хозяин при добавлении машины - наличие граффити, наличие модификации(прокачка),
    описание, фотографии экстерьера / интерьера

    4. админ - полные permission.

    Соотв. каждая роль видит свой интерфейс. Если юзер хочет и сдавать и снимать авто - заводит две учетки.
    При регистрации проверка наличия email с такой же ролью.

2. каждый пользователь выбирает язык, на котором видит всю доступную для него(роль) информацию на сайте, а также получает
   ответы на запросы по апи на выбранном языке.

    Feature:
    # язык пользователя, собтвенника авто, арендатора авто -
    # на основании этого языка для конечного пользователя будет рассчитываться цена аренды
    # например:
    # В Москве сдает свою машину в аренду немец, выбирает DE локаль, вводит base_rate в дойч-марках(ему так понятно "за сколько")
    # Арендует эту машину чукча, устанавливает CHU-котскую локаль, и видит цену за аренду в час в чукотских
    # тугриках(ему тоже так понятно "за сколько")
    # курс валют - с внешнего Апи, если нужной пары валют нету - то используется usd|rub

    # При этом и тот и другой видят сайт на своем родном языке.

3.  чтобы привязать машинопарк к стране/региону/городу начал подтягивать в проект геоданные - база на mysql
    https://github.com/proft/django_countries_regions_cities

4.  Что реализовал:
    модели

    команды:

    - загрузка фикстур:
        load_fixtures --model group
        load_fixtures --model csuser
        load_fixtures --model csuser_groups

    - создание тестовых машин:

        create_test_car --model Porsche --count 2

        создаст 2 модели Car, бренда Porsche
        случайным образом выберет хозяина для каждой из них,
        и создаст для каждой из них галереи интерьера и экстерьера(попытается найти фото по указанной модели авто на loremflickr)

    - немного настроил админку